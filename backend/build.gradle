plugins {
	id 'org.springframework.boot' version '3.3.1'
	id 'io.spring.dependency-management' version '1.1.5' // 최신 버전으로 업데이트
	id 'java'
	id 'com.github.node-gradle.node' version '3.5.0' // 최신 node plugin
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
	implementation 'io.jsonwebtoken:jjwt-impl:0.12.3'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.12.3'

	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-security'

	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.security:spring-security-test'


}

node {
	version = '20.15.0' // 적절한 Node.js 버전
	npmVersion = '10.8.1'
	download = true
}

task installNpmDependencies(type: com.github.gradle.node.npm.task.NpmTask) {
	workingDir = file("${projectDir}/src/main/frontend")
	args = ['install']
}

task buildFrontend(type: com.github.gradle.node.npm.task.NpmTask, dependsOn: installNpmDependencies) {
	workingDir = file("${projectDir}/src/main/frontend")
	args = ['run', 'build']
}

bootJar {
	dependsOn buildFrontend
	from("${projectDir}/src/main/frontend/build") {
		into 'static'
	}
}

tasks.withType(Test) {
	useJUnitPlatform()
}
