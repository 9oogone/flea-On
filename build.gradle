plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.2'
	id 'io.spring.dependency-management' version '1.1.6'
	id 'com.github.node-gradle.node' version '3.6.0' // Add this line
}

group = 'com.ssafy'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

// Node plugin configuration
node {
	version = '18.16.0' // or the version you need
	npmVersion = '10.8.1' // or the version you need
	download = true
}

task npmBuild(type: Exec) {
	dependsOn 'npmInstall'
	commandLine 'npm', 'run', 'build'
	workingDir file('src/main/frontend')
}

task copyFrontendToResources(type: Copy) {
	dependsOn npmBuild
	from 'src/main/frontend/build' // Adjust according to your build output
	into 'src/main/resources/static'
}

// Ensure frontend is built before packaging the JAR
bootJar {
	dependsOn copyFrontendToResources
}

tasks.named('test') {
	useJUnitPlatform()
}
